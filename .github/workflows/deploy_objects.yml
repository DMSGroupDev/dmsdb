# This is a basic workflow to help you get started with Actions

name: Deploy objects to database

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ devdeploy, testdeploy ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  BRANCH_NAME: echo $GITHUB_REF | cut -d/ -f3
  DEFAULT_SCHEMA: ${{ secrets.DEFAULT_SCHEMA }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Local-test:
    name: Local migration test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Test migration in Docker
        uses: joshuaavalon/flyway-action@v1
        with:
          url: jdbc:postgresql://postgres:5432/postgres
          user: postgres
          password: postgres

  dev-deploy:
    name: Migration to DEV environment  
    runs-on: ubuntu-latest
    needs: Local-test
    if: ${{ github.ref == 'refs/heads/devdeploy' }}
    environment: Dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Download na copy Flyway
        run: wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/8.0.2/flyway-commandline-8.0.2-linux-x64.tar.gz | tar xz && sudo ln -s `pwd`/flyway-8.0.2/flyway /usr/local/bin 
      
      - name: Flyway version
        run: flyway -v

      - name: Flyway validate 
        run: flyway -url="jdbc:postgresql://${{ secrets.SERVER }}:5432/${{ secrets.DATABASE }}" -user="${{ secrets.USERNAME }}" -password="${{ secrets.PASSWORD }}" -defaultSchema="${{ secrets.FLYWAY_DEFAULT_SCHEMA }}" -schemas="${{ secrets.SCHEMAS }}" migrate 

  test-deploy:
    name: Migration to TEST environment  
    runs-on: ubuntu-latest
    needs: Local-test
    if: ${{ github.ref == 'refs/heads/testdeploy' }}
    environment: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download na copy Flyway
        run: wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/8.0.2/flyway-commandline-8.0.2-linux-x64.tar.gz | tar xz && sudo ln -s `pwd`/flyway-8.0.2/flyway /usr/local/bin 
      
      - name: Flyway version
        run: flyway -v

      - name: Flyway validate 
        run: flyway -url="jdbc:postgresql://${{ secrets.SERVER }}:5432/${{ secrets.DATABASE }}" -user="${{ secrets.USERNAME }}" -password="${{ secrets.PASSWORD }}" -defaultSchema="${{ secrets.FLYWAY_DEFAULT_SCHEMA }}" -schemas="${{ secrets.SCHEMAS }}" migrate 
        
